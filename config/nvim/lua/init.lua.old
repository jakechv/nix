-------- helpers --------
local api, cmd, fn, g = vim.api, vim.cmd, vim.fn, vim.g
local scopes = {o = vim.o, b = vim.bo, w = vim.wo}
local function opt(scope, key, value)
  scopes[scope][key] = value
  if scope ~= 'o' then scopes['o'][key] = value end
end

-------- settings --------
local indent_width = 2
opt('b', 'tabstop', indent_width)
opt('b', 'smartindent', true)
opt('o', 'hidden', true)
opt('o', 'ignorecase', true)
opt('o', 'smartcase', true)
opt('o', 'magic', true)
opt('o', 'wildmenu', true)
opt('o', 'incsearch', true)
opt('o', 'hlsearch', true)
opt('o', 'undofile', true)

opt('o', 'wildmode', 'longest:full,list:full')

opt('o', 'shiftround', true)
cmd 'set timeoutlen=500'
cmd 'set foldlevelstart=10'
cmd 'set textwidth=0'
cmd 'set wrapmargin=0'
cmd 'set backspace=2'

-------- mappings --------
-- search for current selection in visual mode
map('v', '<silent> *', ':<C-u>call VisualSelection(\'\', \'\')<CR>/<C-R>=@/<CR><CR>')
map('v', '<silent> #', ':<C-u>call VisualSelection(\'\', \'\')<CR>?<C-R>=@/<CR><CR>')

-- cancel search with esc
nmap('n', '<silent> <Esc>', ':nohlsearch<Bar>:echo<CR>')

-- TODO easier way of getting to normal mode from terminal mode
-- map('t', '<c-<leader>>', '<c-\\><c-n><leader>')
-- change window with arrow keys, leaving hjkl for navigationin file
map('t', '<A-left>', '<c-\\><c-n><c-w>h')
map('t', '<A-down>', '<c-\\><c-n><c-w>j')
map('t', '<A-up>', '<c-\\><c-n><c-w>k')
map('t', '<A-right>', '<c-\\><c-n><c-w>l')

map('i', '<A-left>', '<Esc><c-w>h')
map('i', '<A-down>', '<Esc><c-w>j')
map('i', '<A-up>', '<Esc><c-w>k')
map('i', '<A-right>', '<Esc><c-w>l')


-- -- Symbol renaming.
-- nmap <leader>rn <Plug>(coc-rename)
--
--  Formatting selected code.
-- xmap <leader>f  <Plug>(coc-format-selected)
-- nmap <leader>f  <Plug>(coc-format-selected)

-- vim often has trouble recognizing typescript react files
-- nerdtree opens in current dir
-- save file when focus is lost
vim.api.nvim_exec([[
  autocmd BufNewFile,BufRead *.tsx set filetype=typescriptreact
  autocmd BufEnter * lcd %:p:h
  autocmd FocusLost * :wa
]], false)
